{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/517438742949265429/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
TypeError: Cannot read property 'startsWith' of undefined
    at Object.exports.run (/root/discordBots/BotKit/commands/link.js:3:15)
    at Client.client.on (/root/discordBots/BotKit/discord_bot.js:80:15)
    at Client.emit (events.js:182:13)
    at MessageCreateHandler.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js:9:34)
    at WebSocketPacketManager.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js:103:65)
    at WebSocketConnection.onPacket (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:333:35)
    at WebSocketConnection.onMessage (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:296:17)
    at WebSocket.onMessage (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:120:16)
    at WebSocket.emit (events.js:182:13)
    at Receiver._receiver.onmessage (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:137:47)
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/517517218515255296/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/517655834331840512/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/517757905689247747/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
Ready in 2006 channels on 2 servers, for a total of 18977 users.
TypeError: Cannot read property 'startsWith' of undefined
    at Object.exports.run (/root/discordBots/BotKit/commands/link.js:3:15)
    at Client.client.on (/root/discordBots/BotKit/discord_bot.js:80:15)
    at Client.emit (events.js:182:13)
    at MessageCreateHandler.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js:9:34)
    at WebSocketPacketManager.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js:103:65)
    at WebSocketConnection.onPacket (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:333:35)
    at WebSocketConnection.onMessage (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:296:17)
    at WebSocket.onMessage (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:120:16)
    at WebSocket.emit (events.js:182:13)
    at Receiver._receiver.onmessage (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:137:47)
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/517994192681697320/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518021845455470623/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518048574123016192/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518048638937595915/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518074677675950080/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518081834081452044/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518083587577479201/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518090074450034698/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518144394579279903/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
events.js:173
    throw err; // Unhandled 'error' event
    ^

Error [ERR_UNHANDLED_ERROR]: Unhandled error. ([object Object])
    at Client.emit (events.js:171:17)
    at WebSocketConnection.onError (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:374:17)
    at WebSocket.onError (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:128:16)
    at WebSocket.emit (events.js:182:13)
    at _receiver.cleanup (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:211:14)
    at Receiver.cleanup (/root/discordBots/BotKit/node_modules/ws/lib/receiver.js:557:13)
    at WebSocket.finalize (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:206:20)
    at TLSSocket.emit (events.js:182:13)
    at emitErrorNT (internal/streams/destroy.js:82:8)
    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)
Logging in...
Ready in 76 channels on 2 servers, for a total of 7284 users.
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518158985107603458/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518175675883192340/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518203286696886273/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518203286696886273/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518213607524139018/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518253028134879245/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518391814491996161/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518419533158023189/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518429838193852416/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518433470855512071/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518438336315260928/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518438970577911820/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518464868987305984/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518500503726981135/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518511211168399374/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518523734865215518/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518529018555793418/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
TypeError: Cannot read property 'startsWith' of undefined
    at Object.exports.run (/root/discordBots/BotKit/commands/link.js:3:15)
    at Client.client.on (/root/discordBots/BotKit/discord_bot.js:80:15)
    at Client.emit (events.js:182:13)
    at MessageCreateHandler.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js:9:34)
    at WebSocketPacketManager.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js:103:65)
    at WebSocketConnection.onPacket (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:333:35)
    at WebSocketConnection.onMessage (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:296:17)
    at WebSocket.onMessage (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:120:16)
    at WebSocket.emit (events.js:182:13)
    at Receiver._receiver.onmessage (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:137:47)
TypeError: Cannot read property 'startsWith' of undefined
    at Object.exports.run (/root/discordBots/BotKit/commands/link.js:3:15)
    at Client.client.on (/root/discordBots/BotKit/discord_bot.js:80:15)
    at Client.emit (events.js:182:13)
    at MessageCreateHandler.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js:9:34)
    at WebSocketPacketManager.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js:103:65)
    at WebSocketConnection.onPacket (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:333:35)
    at WebSocketConnection.onMessage (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:296:17)
    at WebSocket.onMessage (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:120:16)
    at WebSocket.emit (events.js:182:13)
    at Receiver._receiver.onmessage (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:137:47)
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518683020094341123/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518712117713436672/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518716843016454164/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518729755256946708/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518716843016454164/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
TypeError: Cannot read property 'startsWith' of undefined
    at Object.exports.run (/root/discordBots/BotKit/commands/link.js:3:15)
    at Client.client.on (/root/discordBots/BotKit/discord_bot.js:80:15)
    at Client.emit (events.js:182:13)
    at MessageCreateHandler.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js:9:34)
    at WebSocketPacketManager.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js:103:65)
    at WebSocketConnection.onPacket (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:333:35)
    at WebSocketConnection.onMessage (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:296:17)
    at WebSocket.onMessage (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:120:16)
    at WebSocket.emit (events.js:182:13)
    at Receiver._receiver.onmessage (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:137:47)
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518755221439250442/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518764524816433182/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518767035275149315/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518772400267984896/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
TypeError: Cannot read property 'startsWith' of undefined
    at Object.exports.run (/root/discordBots/BotKit/commands/link.js:3:15)
    at Client.client.on (/root/discordBots/BotKit/discord_bot.js:80:15)
    at Client.emit (events.js:182:13)
    at MessageCreateHandler.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js:9:34)
    at WebSocketPacketManager.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js:103:65)
    at WebSocketConnection.onPacket (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:333:35)
    at WebSocketConnection.onMessage (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:296:17)
    at WebSocket.onMessage (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:120:16)
    at WebSocket.emit (events.js:182:13)
    at Receiver._receiver.onmessage (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:137:47)
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518790984000077835/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518790984000077835/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
(node:20591) UnhandledPromiseRejectionWarning: DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
(node:20591) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 33)
(node:20591) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:20591) UnhandledPromiseRejectionWarning: DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
(node:20591) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 35)
(node:20591) UnhandledPromiseRejectionWarning: DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
(node:20591) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 37)
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518839162082689034/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518858455558389760/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/518966042534608906/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519001733687541760/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519134594172190729/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
Ready in 3049 channels on 2 servers, for a total of 23786 users.
Ready in 3185 channels on 2 servers, for a total of 24171 users.
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519239925783199744/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
(node:20591) UnhandledPromiseRejectionWarning: DiscordAPIError: Unknown Message
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
(node:20591) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 46)
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519281265967497248/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519473492505395221/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519527637052555294/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
(node:20591) UnhandledPromiseRejectionWarning: Error: read ECONNRESET
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
(node:20591) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 50)
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m411[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3309553[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519558415660613642/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519558415660613642/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3309553[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519558415660613642/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519558415660613642/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/channels/519558415660613642/messages HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 411\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m774[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m774[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3309553[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/channels/519558415660613642/messages'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/channels/519558415660613642/messages'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/channels/519558415660613642/messages'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m37[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3312578[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3312578[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/users/471943930649247744/channels HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 37\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m396[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m396[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3312578[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/users/471943930649247744/channels'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519563238753697833/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
(node:20591) UnhandledPromiseRejectionWarning: Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
(node:20591) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 52)
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m411[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3328279[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519563241647636499/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519563241647636499/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3328279[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519563241647636499/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519563241647636499/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/channels/519563241647636499/messages HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 411\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m774[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m774[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3328279[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/channels/519563241647636499/messages'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/channels/519563241647636499/messages'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/channels/519563241647636499/messages'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m411[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3328504[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519563246563229706/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519563246563229706/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3328504[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519563246563229706/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519563246563229706/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/channels/519563246563229706/messages HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 411\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m774[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m774[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3328504[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/channels/519563246563229706/messages'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/channels/519563246563229706/messages'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/channels/519563246563229706/messages'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m411[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3328362[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519563243392598036/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519563243392598036/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3328362[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519563243392598036/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519563243392598036/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/channels/519563243392598036/messages HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 411\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m774[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m774[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3328362[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/channels/519563243392598036/messages'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/channels/519563243392598036/messages'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/channels/519563243392598036/messages'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m37[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3328715[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3328715[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/users/471943930649247744/channels HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 37\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m396[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m396[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3328715[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/users/471943930649247744/channels'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m37[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3342531[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3342531[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/users/471943930649247744/channels HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 37\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m396[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m396[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3342531[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 60 8e ad 20 74 82 c1 51 b4 a2 4a ba 81 e2 3c 7a 1e 08 f0 64 81 31 da e2 17 65 2b f9 c2 d0 d1 50 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/users/471943930649247744/channels'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m411[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3355353[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519571228827058177/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519571228827058177/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3355353[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519571228827058177/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519571228827058177/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/channels/519571228827058177/messages HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 411\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m774[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m774[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3355353[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/channels/519571228827058177/messages'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/channels/519571228827058177/messages'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/channels/519571228827058177/messages'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m411[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3355267[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519571227552120832/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519571227552120832/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3355267[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519571227552120832/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519571227552120832/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/channels/519571227552120832/messages HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 411\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m774[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m774[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3355267[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/channels/519571227552120832/messages'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/channels/519571227552120832/messages'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/channels/519571227552120832/messages'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m37[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3355558[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3355558[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/users/471943930649247744/channels HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 37\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m396[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m396[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3355558[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/users/471943930649247744/channels'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519575197305667595/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519575199423791124/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519575207107887104/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519575211205459991/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m411[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3375328[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519576494075281410/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519576494075281410/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3375328[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519576494075281410/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519576494075281410/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/channels/519576494075281410/messages HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 411\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m774[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m774[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3375328[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/channels/519576494075281410/messages'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/channels/519576494075281410/messages'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/channels/519576494075281410/messages'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m37[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3377431[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3377431[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/users/471943930649247744/channels HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 37\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m396[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m396[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3377431[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/users/471943930649247744/channels'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m411[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3391329[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519580933448531978/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519580933448531978/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3391329[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519580933448531978/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519580933448531978/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/channels/519580933448531978/messages HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 411\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m774[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m774[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3391329[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/channels/519580933448531978/messages'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/channels/519580933448531978/messages'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/channels/519580933448531978/messages'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m37[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3391594[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3391594[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/users/471943930649247744/channels HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 37\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m396[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m396[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3391594[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/users/471943930649247744/channels'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519584902111297566/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
(node:20591) UnhandledPromiseRejectionWarning: Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
(node:20591) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 58)
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m37[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3407153[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3407153[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/users/471943930649247744/channels HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 37\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m396[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m396[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3407153[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/users/471943930649247744/channels'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m37[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3419649[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3419649[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/users/471943930649247744/channels HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 37\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m396[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m396[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3419649[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/users/471943930649247744/channels'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m37[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3431651[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3431651[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/users/471943930649247744/channels HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 37\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m396[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m396[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3431651[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/users/471943930649247744/channels'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ETIMEDOUT
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ETIMEDOUT'[39m,
  code: [32m'ETIMEDOUT'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m411[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3431623[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519592822052225025/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519592822052225025/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m774[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m774[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3431623[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/channels/519592822052225025/messages'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/channels/519592822052225025/messages'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/channels/519592822052225025/messages HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 411\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m774[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m774[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3431623[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m774[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m774[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/channels/519592822052225025/messages'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/channels/519592822052225025/messages'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/channels/519592822052225025/messages'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ Error: read ECONNRESET
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:139:27)
  errno: [32m'ECONNRESET'[39m,
  code: [32m'ECONNRESET'[39m,
  syscall: [32m'read'[39m,
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        abort:
         { [Function: bound onceWrapper] listener: [36m[Function: handleError][39m },
        response: { [Function: bound onceWrapper] listener: [36m[Function][39m } },
     _eventsCount: [33m2[39m,
     _maxListeners: [90mundefined[39m,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: [33m0[39m,
     writable: [33mtrue[39m,
     _last: [33mfalse[39m,
     chunkedEncoding: [33mfalse[39m,
     shouldKeepAlive: [33mtrue[39m,
     useChunkedEncodingByDefault: [33mtrue[39m,
     sendDate: [33mfalse[39m,
     _removedConnection: [33mfalse[39m,
     _removedContLen: [33mfalse[39m,
     _removedTE: [33mfalse[39m,
     _contentLength: [33m37[39m,
     _hasBody: [33mtrue[39m,
     _trailer: [32m''[39m,
     finished: [33mtrue[39m,
     _headerSent: [33mtrue[39m,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3443566[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: [33mfalse[39m,
           secureContext: SecureContext { context: SecureContext {} },
           isServer: [33mfalse[39m,
           requestCert: [33mtrue[39m,
           rejectUnauthorized: [33mtrue[39m,
           session: [90mundefined[39m,
           ALPNProtocols: [90mundefined[39m,
           requestOCSP: [90mundefined[39m },
        _secureEstablished: [33mfalse[39m,
        _securePending: [33mfalse[39m,
        _newSessionPending: [33mfalse[39m,
        _controlReleased: [33mtrue[39m,
        _SNICallback: [1mnull[22m,
        servername: [1mnull[22m,
        alpnProtocol: [1mnull[22m,
        authorized: [33mfalse[39m,
        authorizationError: [1mnull[22m,
        encrypted: [33mtrue[39m,
        _events:
         [Object: null prototype] {
           close:
            [ [36m[Function: onSocketCloseDestroySSL][39m,
              { [Function: bound onceWrapper] listener: [36m[Function][39m },
              [36m[Function: onClose][39m,
              [36m[Function: socketCloseListener][39m ],
           end:
            [ [36m[Function: onReadableStreamEnd][39m,
              { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
           secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
           secure: [36m[Function: onConnectSecure][39m,
           free: [36m[Function: onFree][39m,
           agentRemove: [36m[Function: onRemove][39m,
           drain: [36m[Function: ondrain][39m,
           error: [36m[Function: socketErrorListener][39m },
        _eventsCount: [33m8[39m,
        connecting: [33mfalse[39m,
        _hadError: [33mtrue[39m,
        _handle: [1mnull[22m,
        _parent: [1mnull[22m,
        _host: [32m'discordapp.com'[39m,
        _readableState:
         ReadableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
           length: [33m0[39m,
           pipes: [1mnull[22m,
           pipesCount: [33m0[39m,
           flowing: [33mtrue[39m,
           ended: [33mfalse[39m,
           endEmitted: [33mfalse[39m,
           reading: [33mtrue[39m,
           sync: [33mfalse[39m,
           needReadable: [33mtrue[39m,
           emittedReadable: [33mfalse[39m,
           readableListening: [33mfalse[39m,
           resumeScheduled: [33mfalse[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           defaultEncoding: [32m'utf8'[39m,
           awaitDrain: [33m0[39m,
           readingMore: [33mfalse[39m,
           decoder: [1mnull[22m,
           encoding: [1mnull[22m },
        readable: [33mfalse[39m,
        _maxListeners: [90mundefined[39m,
        _writableState:
         WritableState {
           objectMode: [33mfalse[39m,
           highWaterMark: [33m16384[39m,
           finalCalled: [33mfalse[39m,
           needDrain: [33mfalse[39m,
           ending: [33mfalse[39m,
           ended: [33mfalse[39m,
           finished: [33mfalse[39m,
           destroyed: [33mtrue[39m,
           decodeStrings: [33mfalse[39m,
           defaultEncoding: [32m'utf8'[39m,
           length: [33m396[39m,
           writing: [33mtrue[39m,
           corked: [33m0[39m,
           sync: [33mfalse[39m,
           bufferProcessing: [33mfalse[39m,
           onwrite: [36m[Function: bound onwrite][39m,
           writecb: [36m[Function: bound onCorkedFinish][39m,
           writelen: [33m396[39m,
           bufferedRequest: [1mnull[22m,
           lastBufferedRequest: [1mnull[22m,
           pendingcb: [33m3[39m,
           prefinished: [33mfalse[39m,
           errorEmitted: [33mtrue[39m,
           emitClose: [33mfalse[39m,
           autoDestroy: [33mfalse[39m,
           bufferedRequestCount: [33m0[39m,
           corkedRequestsFree:
            { next: [1mnull[22m,
              entry: [1mnull[22m,
              finish: [36m[Function: bound onCorkedFinish][39m } },
        writable: [33mfalse[39m,
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [90mundefined[39m,
        _server: [1mnull[22m,
        ssl: [1mnull[22m,
        _requestCert: [33mtrue[39m,
        _rejectUnauthorized: [33mtrue[39m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular][39m,
        [[32mSymbol(res)[39m]:
         TLSWrap {
           _parent:
            TCP {
              reading: [36m[Getter/Setter][39m,
              onread: [1mnull[22m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner)[39m]: [36m[Circular][39m,
              [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
           _parentWrap: [90mundefined[39m,
           _secureContext: SecureContext { context: SecureContext {} },
           reading: [33mtrue[39m,
           onread: [36m[Function: noop][39m,
           onhandshakestart: [36m[Function: noop][39m,
           onhandshakedone: [36m[Function: bound ][39m,
           onocspresponse: [36m[Function: onocspresponse][39m,
           onerror: [36m[Function: onerror][39m,
           [[32mSymbol(owner)[39m]: [36m[Circular][39m },
        [[32mSymbol(asyncId)[39m]: [33m3443566[39m,
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
        [[32mSymbol(connect-options)[39m]:
         { rejectUnauthorized: [33mtrue[39m,
           ciphers:
            [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
           checkServerIdentity: [36m[Function: checkServerIdentity][39m,
           minDHSize: [33m1024[39m,
           _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
           secureEndpoint: [33mtrue[39m,
           agent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
              requests: {},
              sockets: { [32m'discordapp.com:443::::::::::::::::'[39m: [ [36m[Circular][39m ] },
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mtrue[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] } },
           method: [32m'POST'[39m,
           encoding: [1mnull[22m,
           href:
            [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
           path: [1mnull[22m,
           pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
           query: [1mnull[22m,
           search: [1mnull[22m,
           hash: [1mnull[22m,
           hostname: [32m'discordapp.com'[39m,
           port: [33m443[39m,
           host: [32m'discordapp.com'[39m,
           auth: [1mnull[22m,
           slashes: [33mtrue[39m,
           protocol: [32m'https:'[39m,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [36m[Function][39m },
              _eventsCount: [33m1[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: { path: [1mnull[22m },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache:
               { map:
                  { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                     <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                 list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
           keepAlive: [33mtrue[39m,
           servername: [32m'discordapp.com'[39m } },
     _header:
      [32m'POST /api/v7/users/471943930649247744/channels HTTP/1.1\r\nHost: discordapp.com\r\nAuthorization: Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o\r\nUser-Agent: DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0\r\nContent-Type: application/json\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nContent-Length: 37\r\n\r\n'[39m,
     _onPendingData: [36m[Function: noopPendingOutput][39m,
     agent:
      Agent {
        _events: [Object: null prototype] { free: [36m[Function][39m },
        _eventsCount: [33m1[39m,
        _maxListeners: [90mundefined[39m,
        defaultPort: [33m443[39m,
        protocol: [32m'https:'[39m,
        options: { keepAlive: [33mtrue[39m, path: [1mnull[22m },
        requests: {},
        sockets:
         { [32m'discordapp.com:443::::::::::::::::'[39m:
            [ TLSSocket {
                _tlsOptions:
                 { pipe: [33mfalse[39m,
                   secureContext: SecureContext { context: SecureContext {} },
                   isServer: [33mfalse[39m,
                   requestCert: [33mtrue[39m,
                   rejectUnauthorized: [33mtrue[39m,
                   session: [90mundefined[39m,
                   ALPNProtocols: [90mundefined[39m,
                   requestOCSP: [90mundefined[39m },
                _secureEstablished: [33mfalse[39m,
                _securePending: [33mfalse[39m,
                _newSessionPending: [33mfalse[39m,
                _controlReleased: [33mtrue[39m,
                _SNICallback: [1mnull[22m,
                servername: [1mnull[22m,
                alpnProtocol: [1mnull[22m,
                authorized: [33mfalse[39m,
                authorizationError: [1mnull[22m,
                encrypted: [33mtrue[39m,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [36m[Function: onSocketCloseDestroySSL][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function][39m },
                      [36m[Function: onClose][39m,
                      [36m[Function: socketCloseListener][39m ],
                   end:
                    [ [36m[Function: onReadableStreamEnd][39m,
                      { [Function: bound onceWrapper] listener: [36m[Function: onConnectEnd][39m } ],
                   secureConnect: { [Function: bound onceWrapper] listener: [36m[Function][39m },
                   secure: [36m[Function: onConnectSecure][39m,
                   free: [36m[Function: onFree][39m,
                   agentRemove: [36m[Function: onRemove][39m,
                   drain: [36m[Function: ondrain][39m,
                   error: [36m[Function: socketErrorListener][39m },
                _eventsCount: [33m8[39m,
                connecting: [33mfalse[39m,
                _hadError: [33mtrue[39m,
                _handle: [1mnull[22m,
                _parent: [1mnull[22m,
                _host: [32m'discordapp.com'[39m,
                _readableState:
                 ReadableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
                   length: [33m0[39m,
                   pipes: [1mnull[22m,
                   pipesCount: [33m0[39m,
                   flowing: [33mtrue[39m,
                   ended: [33mfalse[39m,
                   endEmitted: [33mfalse[39m,
                   reading: [33mtrue[39m,
                   sync: [33mfalse[39m,
                   needReadable: [33mtrue[39m,
                   emittedReadable: [33mfalse[39m,
                   readableListening: [33mfalse[39m,
                   resumeScheduled: [33mfalse[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   awaitDrain: [33m0[39m,
                   readingMore: [33mfalse[39m,
                   decoder: [1mnull[22m,
                   encoding: [1mnull[22m },
                readable: [33mfalse[39m,
                _maxListeners: [90mundefined[39m,
                _writableState:
                 WritableState {
                   objectMode: [33mfalse[39m,
                   highWaterMark: [33m16384[39m,
                   finalCalled: [33mfalse[39m,
                   needDrain: [33mfalse[39m,
                   ending: [33mfalse[39m,
                   ended: [33mfalse[39m,
                   finished: [33mfalse[39m,
                   destroyed: [33mtrue[39m,
                   decodeStrings: [33mfalse[39m,
                   defaultEncoding: [32m'utf8'[39m,
                   length: [33m396[39m,
                   writing: [33mtrue[39m,
                   corked: [33m0[39m,
                   sync: [33mfalse[39m,
                   bufferProcessing: [33mfalse[39m,
                   onwrite: [36m[Function: bound onwrite][39m,
                   writecb: [36m[Function: bound onCorkedFinish][39m,
                   writelen: [33m396[39m,
                   bufferedRequest: [1mnull[22m,
                   lastBufferedRequest: [1mnull[22m,
                   pendingcb: [33m3[39m,
                   prefinished: [33mfalse[39m,
                   errorEmitted: [33mtrue[39m,
                   emitClose: [33mfalse[39m,
                   autoDestroy: [33mfalse[39m,
                   bufferedRequestCount: [33m0[39m,
                   corkedRequestsFree:
                    { next: [1mnull[22m,
                      entry: [1mnull[22m,
                      finish: [36m[Function: bound onCorkedFinish][39m } },
                writable: [33mfalse[39m,
                allowHalfOpen: [33mfalse[39m,
                _sockname: [1mnull[22m,
                _pendingData: [1mnull[22m,
                _pendingEncoding: [32m''[39m,
                server: [90mundefined[39m,
                _server: [1mnull[22m,
                ssl: [1mnull[22m,
                _requestCert: [33mtrue[39m,
                _rejectUnauthorized: [33mtrue[39m,
                parser: [1mnull[22m,
                _httpMessage: [36m[Circular][39m,
                [[32mSymbol(res)[39m]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [36m[Getter/Setter][39m,
                      onread: [1mnull[22m,
                      onconnection: [1mnull[22m,
                      [[32mSymbol(owner)[39m]: [36m[Circular][39m,
                      [[32mSymbol(handle_onclose)[39m]: [36m[Function: done][39m },
                   _parentWrap: [90mundefined[39m,
                   _secureContext: SecureContext { context: SecureContext {} },
                   reading: [33mtrue[39m,
                   onread: [36m[Function: noop][39m,
                   onhandshakestart: [36m[Function: noop][39m,
                   onhandshakedone: [36m[Function: bound ][39m,
                   onocspresponse: [36m[Function: onocspresponse][39m,
                   onerror: [36m[Function: onerror][39m,
                   [[32mSymbol(owner)[39m]: [36m[Circular][39m },
                [[32mSymbol(asyncId)[39m]: [33m3443566[39m,
                [[32mSymbol(lastWriteQueueSize)[39m]: [33m396[39m,
                [[32mSymbol(timeout)[39m]: [1mnull[22m,
                [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
                [[32mSymbol(kBytesWritten)[39m]: [33m396[39m,
                [[32mSymbol(connect-options)[39m]:
                 { rejectUnauthorized: [33mtrue[39m,
                   ciphers:
                    [32m'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA'[39m,
                   checkServerIdentity: [36m[Function: checkServerIdentity][39m,
                   minDHSize: [33m1024[39m,
                   _agentKey: [32m'discordapp.com:443::::::::::::::::'[39m,
                   secureEndpoint: [33mtrue[39m,
                   agent: [36m[Circular][39m,
                   method: [32m'POST'[39m,
                   encoding: [1mnull[22m,
                   href:
                    [32m'https://discordapp.com/api/v7/users/471943930649247744/channels'[39m,
                   path: [1mnull[22m,
                   pathname: [32m'/api/v7/users/471943930649247744/channels'[39m,
                   query: [1mnull[22m,
                   search: [1mnull[22m,
                   hash: [1mnull[22m,
                   hostname: [32m'discordapp.com'[39m,
                   port: [33m443[39m,
                   host: [32m'discordapp.com'[39m,
                   auth: [1mnull[22m,
                   slashes: [33mtrue[39m,
                   protocol: [32m'https:'[39m,
                   _defaultAgent:
                    Agent {
                      _events: [Object: null prototype] { free: [36m[Function][39m },
                      _eventsCount: [33m1[39m,
                      _maxListeners: [90mundefined[39m,
                      defaultPort: [33m443[39m,
                      protocol: [32m'https:'[39m,
                      options: { path: [1mnull[22m },
                      requests: {},
                      sockets: {},
                      freeSockets: {},
                      keepAliveMsecs: [33m1000[39m,
                      keepAlive: [33mfalse[39m,
                      maxSockets: [33mInfinity[39m,
                      maxFreeSockets: [33m256[39m,
                      maxCachedSessions: [33m100[39m,
                      _sessionCache:
                       { map:
                          { [32m'gateway.discord.gg:443::::::::::::::::'[39m:
                             <Buffer 30 82 06 97 02 01 01 02 02 03 03 04 02 c0 2f 04 20 f3 66 b7 25 2f 1b 7d 3e 11 53 87 58 5b 9b 6f 2f 83 99 d9 c9 f1 f4 e5 15 4c fa 3c 91 9d fc 57 15 04 ... 1641 more bytes> },
                         list: [ [32m'gateway.discord.gg:443::::::::::::::::'[39m ] } },
                   keepAlive: [33mtrue[39m,
                   servername: [32m'discordapp.com'[39m } } ] },
        freeSockets: {},
        keepAliveMsecs: [33m1000[39m,
        keepAlive: [33mtrue[39m,
        maxSockets: [33mInfinity[39m,
        maxFreeSockets: [33m256[39m,
        maxCachedSessions: [33m100[39m,
        _sessionCache: { map: {}, list: [] } },
     socketPath: [90mundefined[39m,
     timeout: [90mundefined[39m,
     method: [32m'POST'[39m,
     path: [32m'/api/v7/users/471943930649247744/channels'[39m,
     _ended: [33mfalse[39m,
     res: [1mnull[22m,
     aborted: [33mfalse[39m,
     timeoutCb: [1mnull[22m,
     upgradeOrConnect: [33mfalse[39m,
     parser: [1mnull[22m,
     maxHeadersCount: [1mnull[22m,
     [[32mSymbol(isCorked)[39m]: [33mfalse[39m,
     [[32mSymbol(outHeadersKey)[39m]:
      [Object: null prototype] {
        host: [ [32m'Host'[39m, [32m'discordapp.com'[39m ],
        authorization:
         [ [32m'Authorization'[39m,
           [32m'Bot NDcxOTQzOTMwNjQ5MjQ3NzQ0.Dtc-8Q.BiV94w0RttNtUQ1bzxYtXpc59-o'[39m ],
        [32m'user-agent'[39m:
         [ [32m'User-Agent'[39m,
           [32m'DiscordBot (https://github.com/discordjs/discord.js, 11.4.2) Node.js/v11.2.0'[39m ],
        [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
        [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, deflate'[39m ] } } }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519598718434148352/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519598734787739652/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519598737090281488/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519598740458176523/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519704925609918464/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
TypeError: Cannot read property 'startsWith' of undefined
    at Object.exports.run (/root/discordBots/BotKit/commands/link.js:3:15)
    at Client.client.on (/root/discordBots/BotKit/discord_bot.js:80:15)
    at Client.emit (events.js:182:13)
    at MessageCreateHandler.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js:9:34)
    at WebSocketPacketManager.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js:103:65)
    at WebSocketConnection.onPacket (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:333:35)
    at WebSocketConnection.onMessage (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:296:17)
    at WebSocket.onMessage (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:120:16)
    at WebSocket.emit (events.js:182:13)
    at Receiver._receiver.onmessage (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:137:47)
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519768788355514368/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519910822907215902/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
TypeError: Cannot read property 'startsWith' of undefined
    at Object.exports.run (/root/discordBots/BotKit/commands/link.js:3:15)
    at Client.client.on (/root/discordBots/BotKit/discord_bot.js:80:15)
    at Client.emit (events.js:182:13)
    at MessageCreateHandler.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js:9:34)
    at WebSocketPacketManager.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js:103:65)
    at WebSocketConnection.onPacket (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:333:35)
    at WebSocketConnection.onMessage (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:296:17)
    at WebSocket.onMessage (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:120:16)
    at WebSocket.emit (events.js:182:13)
    at Receiver._receiver.onmessage (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:137:47)
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519942292124073984/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/519962888618901506/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/520288312578146319/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
TypeError: Cannot read property 'startsWith' of undefined
    at Object.exports.run (/root/discordBots/BotKit/commands/link.js:3:15)
    at Client.client.on (/root/discordBots/BotKit/discord_bot.js:80:15)
    at Client.emit (events.js:182:13)
    at MessageCreateHandler.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js:9:34)
    at WebSocketPacketManager.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js:103:65)
    at WebSocketConnection.onPacket (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:333:35)
    at WebSocketConnection.onMessage (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:296:17)
    at WebSocket.onMessage (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:120:16)
    at WebSocket.emit (events.js:182:13)
    at Receiver._receiver.onmessage (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:137:47)
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/520363410798673961/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
events.js:173
    throw err; // Unhandled 'error' event
    ^

Error [ERR_UNHANDLED_ERROR]: Unhandled error. ([object Object])
    at Client.emit (events.js:171:17)
    at WebSocketConnection.onError (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:374:17)
    at WebSocket.onError (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:128:16)
    at WebSocket.emit (events.js:182:13)
    at _receiver.cleanup (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:211:14)
    at Receiver.cleanup (/root/discordBots/BotKit/node_modules/ws/lib/receiver.js:557:13)
    at WebSocket.finalize (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:206:20)
    at TLSSocket.emit (events.js:182:13)
    at emitErrorNT (internal/streams/destroy.js:82:8)
    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)
Logging in...
Ready in 77 channels on 2 servers, for a total of 4598 users.
events.js:173
    throw err; // Unhandled 'error' event
    ^

Error [ERR_UNHANDLED_ERROR]: Unhandled error. ([object Object])
    at Client.emit (events.js:171:17)
    at WebSocketConnection.onError (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:374:17)
    at WebSocket.onError (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:128:16)
    at WebSocket.emit (events.js:182:13)
    at _receiver.cleanup (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:211:14)
    at Receiver.cleanup (/root/discordBots/BotKit/node_modules/ws/lib/receiver.js:557:13)
    at WebSocket.finalize (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:206:20)
    at TLSSocket.emit (events.js:182:13)
    at emitErrorNT (internal/streams/destroy.js:82:8)
    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)
Logging in...
events.js:173
    throw err; // Unhandled 'error' event
    ^

Error [ERR_UNHANDLED_ERROR]: Unhandled error. ([object Object])
    at Client.emit (events.js:171:17)
    at WebSocketConnection.onError (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:374:17)
    at WebSocket.onError (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:128:16)
    at WebSocket.emit (events.js:182:13)
    at _receiver.cleanup (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:211:14)
    at Receiver.cleanup (/root/discordBots/BotKit/node_modules/ws/lib/receiver.js:557:13)
    at WebSocket.finalize (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:206:20)
    at TLSSocket.emit (events.js:182:13)
    at emitErrorNT (internal/streams/destroy.js:82:8)
    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)
Logging in...
Ready in 77 channels on 2 servers, for a total of 3873 users.
events.js:173
    throw err; // Unhandled 'error' event
    ^

Error [ERR_UNHANDLED_ERROR]: Unhandled error. ([object Object])
    at Client.emit (events.js:171:17)
    at WebSocketConnection.onError (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:374:17)
    at WebSocket.onError (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:128:16)
    at WebSocket.emit (events.js:182:13)
    at _receiver.cleanup (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:211:14)
    at Receiver.cleanup (/root/discordBots/BotKit/node_modules/ws/lib/receiver.js:557:13)
    at WebSocket.finalize (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:206:20)
    at TLSSocket.emit (events.js:182:13)
    at emitErrorNT (internal/streams/destroy.js:82:8)
    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)
Logging in...
Ready in 77 channels on 2 servers, for a total of 3397 users.
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/520546933547466752/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/520570908755099673/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/520579747122511893/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/520619810837495810/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
TypeError: Cannot read property 'startsWith' of undefined
    at Object.exports.run (/root/discordBots/BotKit/commands/link.js:3:15)
    at Client.client.on (/root/discordBots/BotKit/discord_bot.js:80:15)
    at Client.emit (events.js:182:13)
    at MessageCreateHandler.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js:9:34)
    at WebSocketPacketManager.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js:103:65)
    at WebSocketConnection.onPacket (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:333:35)
    at WebSocketConnection.onMessage (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:296:17)
    at WebSocket.onMessage (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:120:16)
    at WebSocket.emit (events.js:182:13)
    at Receiver._receiver.onmessage (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:137:47)
{ DiscordAPIError: Cannot send messages to this user
    at item.request.gen.end (/root/discordBots/BotKit/node_modules/discord.js/src/client/rest/RequestHandlers/Sequential.js:79:15)
    at then (/root/discordBots/BotKit/node_modules/snekfetch/src/index.js:215:21)
    at process.internalTickCallback (internal/process/next_tick.js:77:7)
  name: [32m'DiscordAPIError'[39m,
  message: [32m'Cannot send messages to this user'[39m,
  path: [32m'/api/v7/channels/520634279508574221/messages'[39m,
  code: [33m50007[39m,
  method: [32m'POST'[39m }
328920387574431746 entered a wrong link: [https://gamekit.com/profil/124324582/]
328920387574431746 entered a wrong link: [https://gamekit.com/profil/124324582/]
328920387574431746 entered a correct link: https://gamekit.com/profil/124324582/
512653038159134729 entered a wrong link: https://gamekit.com/
512653038159134729 entered a correct link: https://gamekit.com/profil/122496848/
259688562516033536 entered a wrong link: Miko
259688562516033536 entered a wrong link: Mikolimbo
357904479619776513 entered a correct link: https://gamekit.com/profil/124058576/
218168958874812428 entered a correct link: https://gamekit.com/profil/108576858/
218168958874812428 entered a correct link: https://gamekit.com/profil/108576858/
517306517569929216 entered a correct link: https://gamekit.com/profil/122485294/
367433138613256194 entered a correct link: https://gamekit.com/profil/124329724/
293685306983448577 entered a correct link: https://gamekit.com/profil/124305304/
226729937623580673 entered a correct link: https://gamekit.com/profil/110431696/
277559003662254090 entered a correct link: https://gamekit.com/profil/124055734/
223217141686468609 entered a correct link: https://gamekit.com/profil/124310816/
TypeError: Cannot read property 'startsWith' of undefined
    at Object.exports.run (/root/discordBots/BotKit/commands/link.js:3:15)
    at Client.client.on (/root/discordBots/BotKit/discord_bot.js:80:15)
    at Client.emit (events.js:182:13)
    at MessageCreateHandler.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/handlers/MessageCreate.js:9:34)
    at WebSocketPacketManager.handle (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/packets/WebSocketPacketManager.js:103:65)
    at WebSocketConnection.onPacket (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:333:35)
    at WebSocketConnection.onMessage (/root/discordBots/BotKit/node_modules/discord.js/src/client/websocket/WebSocketConnection.js:296:17)
    at WebSocket.onMessage (/root/discordBots/BotKit/node_modules/ws/lib/event-target.js:120:16)
    at WebSocket.emit (events.js:182:13)
    at Receiver._receiver.onmessage (/root/discordBots/BotKit/node_modules/ws/lib/websocket.js:137:47)
273958513078697985 entered a correct link: https://gamekit.com/profil/110200888/
410551117164969986 entered a correct link: https://gamekit.com/profil/122019334/
^C
/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)

/root/discordBots/BotKit/discord_bot.js:28
client.logLink = sql.prepare("INSERT INTO users (url, correct) VALUES (@url, @correct);");
                     ^
SqliteError: table users has no column named url
    at Object.<anonymous> (/root/discordBots/BotKit/discord_bot.js:28:22)
    at Module._compile (internal/modules/cjs/loader.js:722:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:733:10)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:560:12)
    at Function.Module._load (internal/modules/cjs/loader.js:552:3)
    at Function.Module.runMain (internal/modules/cjs/loader.js:775:12)
    at startup (internal/bootstrap/node.js:300:19)
    at bootstrapNodeJSCore (internal/bootstrap/node.js:826:3)
^CLogging in...
Ready in 77 channels on 2 servers, for a total of 3363 users.
